{
  "openapi": "3.0.0",
  "info": {
    "title": "Edgex Foundry - Core Metadata API",
    "description": "This is the definition of the API for the Core Metadata service in the EdgeX Foundry IOT microservice platform. Core Metadata is responsible for all information related to provisioned devices and their associated services.",
    "version": "2.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:59881/api/v2",
      "description": "URL for local development and testing"
    }
  ],
  "paths": {
    "/device": {
      "post": {
        "summary": "Allows provisioning of a new device",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddDeviceRequest"
                }
              },
              "examples": {
                "AddDeviceRequest": {
                  "$ref": "#/components/examples/AddDeviceRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiPOSTStatusExample": {
                    "$ref": "#/components/examples/MultiPOSTStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Allows updates to an existing device",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateDeviceRequest"
                }
              },
              "examples": {
                "UpdateDeviceRequest": {
                  "$ref": "#/components/examples/UpdateDeviceRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiUpdateStatusExample": {
                    "$ref": "#/components/examples/MultiUpdateStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/all": {
      "get": {
        "summary": "Given the entire range of devices sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Devices may also be filtered by label.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDevicesResponse"
                },
                "examples": {
                  "GetAllDevicesResponse": {
                    "$ref": "#/components/examples/GetAllDevicesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/check/name/{name}": {
      "get": {
        "summary": "Returned status code indicates if the device exists or not.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the device you want to check on.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device exists",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "200Example": {
                    "$ref": "#/components/examples/200Example"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/name/{name}": {
      "get": {
        "summary": "Returns a device by name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the device you wish to load, datatype string.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "requestId": "75ca2b65-f8ef-44f7-a995-a29c53ce111b",
                  "statusCode": 200,
                  "message": "",
                  "device": {
                    "id": "55b68fcf-0fd2-445a-9fae-670b37fb9274",
                    "name": "Random-Boolean-Device",
                    "description": "Example of Device Virtual",
                    "created": 1600926440123,
                    "modified": 1600928666321,
                    "adminState": "UNLOCKED",
                    "operatingState": "UP",
                    "lastConnected": 0,
                    "lastReported": 0,
                    "labels": [
                      "device-virtual-example"
                    ],
                    "location": "",
                    "serviceName": "device-virtual",
                    "profileName": "Random-Boolean-Device",
                    "autoEvents": [
                      {
                        "interval": "10s",
                        "onChange": false,
                        "sourceName": "Bool"
                      }
                    ],
                    "protocols": {
                      "other": {
                        "Address": "device-virtual-bool-01",
                        "Port": "300"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a device by name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the device you wish to load, datatype string.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "200Example": {
                    "$ref": "#/components/examples/200Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/profile/name/{name}": {
      "get": {
        "summary": "Returns all devices assigned to the specified device profile",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name identifying a device profile",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDevicesResponse"
                },
                "examples": {
                  "GetAllDevicesResponse": {
                    "$ref": "#/components/examples/GetAllDevicesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/device/service/name/{name}": {
      "get": {
        "summary": "Returns all devices assigned to the specified device service",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name identifying a device service",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDevicesResponse"
                },
                "examples": {
                  "GetAllDevicesResponse": {
                    "$ref": "#/components/examples/GetAllDevicesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceprofile": {
      "put": {
        "summary": "Allows updates to an existing device profile",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateDeviceProfileRequest"
                }
              },
              "examples": {
                "AddDeviceRequest": {
                  "$ref": "#/components/examples/AddDeviceProfileRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiUpdateStatusExample": {
                    "$ref": "#/components/examples/MultiUpdateStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Allows creation of a new device profile",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddDeviceProfileRequest"
                }
              },
              "examples": {
                "AddDeviceRequest": {
                  "$ref": "#/components/examples/AddDeviceProfileRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiPOSTStatusExample": {
                    "$ref": "#/components/examples/MultiPOSTStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceprofile/uploadfile": {
      "put": {
        "summary": "Allows updates to an existing device profile from file",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/deviceprofile_uploadfile_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseWithIdResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "requestId": "778b4234-917d-4df7-84dd-a99c33c3ec3b",
                  "statusCode": 200,
                  "message": ""
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict detected. Device profile name must be universally unique.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "409Example": {
                    "$ref": "#/components/examples/409Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error happened on the server.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Allows creation of a new device profile via an uploaded YAML file",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/deviceprofile_uploadfile_body_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseWithIdResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "requestId": "327d9c1e-ac41-41cb-ae83-e78d74472cd8",
                  "statusCode": 201,
                  "id": "1dc44f6c-a557-4d4a-9d2b-ccdadd674c9d",
                  "message": ""
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict detected. Device profile name and command names must be universally unique.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "409Example": {
                    "$ref": "#/components/examples/409Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error happened on the server.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceprofile/all": {
      "get": {
        "summary": "Given the entire range of device profiles sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device profiles may also be filtered by label.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDeviceProfilesResponse"
                },
                "examples": {
                  "GetAllDeviceProfilesResponse": {
                    "$ref": "#/components/examples/GetAllDeviceProfilesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceprofile/name/{name}": {
      "get": {
        "summary": "Returns a device profile by its name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of a device profile",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceProfileResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "requestId": "374387ad-18ef-4f5c-8b67-6844bec31310",
                  "statusCode": 200,
                  "message": "",
                  "profile": {
                    "id": "9d33b6fd-f38b-4f0e-aef4-0332578ff2c0",
                    "name": "",
                    "description": "Example of Device-Virtual",
                    "created": 1600927134904,
                    "modified": 1600927134904,
                    "manufacturer": "IOTech",
                    "model": "Device-Virtual-01",
                    "labels": [
                      "device-virtual-example"
                    ],
                    "deviceResources": [
                      {
                        "description": "Generate random float32 value",
                        "name": "Float32",
                        "properties": {
                          "valueType": "Float32",
                          "readWrite": "RW",
                          "defaultValue": "0"
                        }
                      }
                    ],
                    "deviceCommands": [
                      {
                        "name": "Float32",
                        "readWrite": "RW",
                        "resourceOperations": [
                          {
                            "deviceResource": "Float32"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a device profile by its unique name. This operation will fail if there are devices actively using the profile.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of a device profile",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "200Example": {
                    "$ref": "#/components/examples/200Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "409": {
            "description": "The requested resource is locked",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "409DeleteExample": {
                    "$ref": "#/components/examples/409DeleteExample"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceprofile/manufacturer/{manufacturer}": {
      "get": {
        "summary": "Returns a list of device profiles for the given manufacturer.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "manufacturer",
            "in": "path",
            "description": "The manufacturer for the device profiles in which you're interested.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDeviceProfilesResponse"
                },
                "examples": {
                  "GetAllDeviceProfilesResponse": {
                    "$ref": "#/components/examples/GetAllDeviceProfilesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceprofile/manufacturer/{manufacturer}/model/{model}": {
      "get": {
        "summary": "Returns a list of device profiles for the given manufacturer and model.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "manufacturer",
            "in": "path",
            "description": "The manufacturer for the device profiles in which you're interested.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "path",
            "description": "The model of the device profiles in which you're interested.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDeviceProfilesResponse"
                },
                "examples": {
                  "GetAllDeviceProfilesResponse": {
                    "$ref": "#/components/examples/GetAllDeviceProfilesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceprofile/model/{model}": {
      "get": {
        "summary": "Returns a list of device profiles for the given model.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "model",
            "in": "path",
            "description": "The model assigned to the device profiles in which you're interested.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDeviceProfilesResponse"
                },
                "examples": {
                  "GetAllDeviceProfilesResponse": {
                    "$ref": "#/components/examples/GetAllDeviceProfilesResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceresource/profile/{profileName}/resource/{resourceName}": {
      "get": {
        "summary": "Returns a device resource for the given profileName and resourceName.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "The unique name of a device profile",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The unique name of a device resource",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceResourceResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "statusCode": 200,
                  "resource": {
                    "name": "float32-value",
                    "description": "random float32 value",
                    "properties": {
                      "valueType": "Float32",
                      "readWrite": "R"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceservice": {
      "post": {
        "summary": "Add a new DeviceService - name must be unique.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddDeviceServiceRequest"
                }
              },
              "examples": {
                "AddDeviceServiceRequest": {
                  "$ref": "#/components/examples/AddDeviceServiceRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiPOSTStatusExample": {
                    "$ref": "#/components/examples/MultiPOSTStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Allows updates to an existing device service",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceServiceRequest"
              },
              "example": [
                {
                  "requestId": "d3367878-c46b-4263-b0af-1ccac37aab6e",
                  "apiVersion": "v2",
                  "service": [
                    {
                      "id": "edaa7c0f-05c6-4368-89f1-3be5e197cf6a",
                      "name": "home thermostat device service",
                      "description": "Home automation system",
                      "labels": [
                        "home"
                      ]
                    }
                  ]
                },
                {
                  "requestId": "5accf5a9-9c7e-4160-bbbb-03d1cb25b492",
                  "apiVersion": "v2",
                  "service": [
                    {
                      "id": "aee709c7-1b30-4db4-9256-2e7eb2073b2f",
                      "name": "Google Home device service",
                      "adminState": "UNLOCKED",
                      "baseAddress": "http://home-device-service:49980"
                    }
                  ]
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiUpdateStatusExample": {
                    "$ref": "#/components/examples/MultiUpdateStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceservice/all": {
      "get": {
        "summary": "Given the entire range of device services sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Device services may also be filtered by label.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiDeviceServicesResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "requestId": "4c7c47a7-10e0-4489-99c5-f639b7d7eb5c",
                  "statusCode": 200,
                  "totalCount": 3,
                  "services": [
                    {
                      "id": "1ff7762f-c432-4af0-9a5d-756bbc92744b",
                      "name": "device-virtual",
                      "created": 1600927134890,
                      "modified": 1600927134890,
                      "description": "Example",
                      "lastConnected": 0,
                      "lastReported": 0,
                      "adminState": "UNLOCKED",
                      "labels": [
                        "virtual"
                      ],
                      "baseAddress": "http://edgex-device-virtual:59990"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deviceservice/name/{name}": {
      "get": {
        "summary": "Returns a device service by its unique name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of the device service you want to load.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceServiceResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "requestId": "5e46b1fe-fb3e-4bc5-b84c-0ea8f9e0b511",
                  "statusCode": 200,
                  "message": "",
                  "service": {
                    "id": "1ff7762f-c432-4af0-9a5d-756bbc92744b",
                    "name": "device-virtual",
                    "description": "Example",
                    "created": 1600927134890,
                    "modified": 1600927134890,
                    "lastConnected": 0,
                    "lastReported": 0,
                    "adminState": "UNLOCKED",
                    "labels": [
                      "virtual"
                    ],
                    "baseAddress": "http://edgex-device-virtual:59990"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a device service by its unique name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of the device service you want to load.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "200Example": {
                    "$ref": "#/components/examples/200Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "409": {
            "description": "The requested resource is locked",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "409DeleteExample": {
                    "$ref": "#/components/examples/409DeleteExample"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provisionwatcher": {
      "post": {
        "summary": "Add a new ProvisionWatcher - name must be unique.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddProvisionWatcherRequest"
                }
              },
              "examples": {
                "AddProvisionWatcherRequest": {
                  "$ref": "#/components/examples/AddProvisionWatcherRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiPOSTStatusExample": {
                    "$ref": "#/components/examples/MultiPOSTStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Allows updates to an existing provision watcher",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProvisionWatcherRequest"
              },
              "example": [
                {
                  "requestId": "d3367878-c46b-4263-b0af-1ccac37aab6e",
                  "apiVersion": "v2",
                  "provisionwatcher": [
                    {
                      "id": "edaa7c0f-05c6-4368-89f1-3be5e197cf6a",
                      "name": "simple-identifier",
                      "identifiers": {
                        "address": "localhost",
                        "port": "3[0-9]{2}"
                      },
                      "adminState": "UNLOCKED",
                      "labels": [
                        "simple"
                      ]
                    }
                  ]
                },
                {
                  "requestId": "5accf5a9-9c7e-4160-bbbb-03d1cb25b492",
                  "apiVersion": "v2",
                  "provisionwatcher": [
                    {
                      "id": "aee709c7-1b30-4db4-9256-2e7eb2073b2f",
                      "name": "virtual-identifier",
                      "profileName": "device-virtual",
                      "serviceName": "device-virtual"
                    }
                  ]
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "description": "Indicates a multi-part response supportive of accepting multiple requests at once. The 'statusCode' property of each response in the returned array will indicate success or failure.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/ErrorResponse"
                      },
                      {
                        "$ref": "#/components/schemas/BaseWithIdResponse"
                      }
                    ]
                  }
                },
                "examples": {
                  "MultiUpdateStatusExample": {
                    "$ref": "#/components/examples/MultiUpdateStatusExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provisionwatcher/all": {
      "get": {
        "summary": "Given the entire range of provision watchers sorted by last modified descending, returns a portion of that range according to the offset and limit parameters. Provision watchers may also be filtered by label.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiProvisionWatchersResponse"
                },
                "examples": {
                  "GetAllProvisionWatchersResponse": {
                    "$ref": "#/components/examples/GetAllProvisionWatchersResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provisionwatcher/name/{name}": {
      "get": {
        "summary": "Returns a provision watcher by its unique name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of a provision watcher",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProvisionWatcherResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "requestId": "4e63c9b9-9cc4-45e4-9bf0-6d994a3860b4",
                  "statusCode": 200,
                  "message": "",
                  "provisionwatcher": {
                    "id": "1ff7762f-c432-4af0-9a5d-756bbc92744b",
                    "name": "virtual-watcher",
                    "created": 1600927134890,
                    "modified": 1600927134890,
                    "labels": [
                      "virtual"
                    ],
                    "identifiers": {
                      "address": "localhost",
                      "port": "3[0-9]{2}"
                    },
                    "blockingIdentifiers": {
                      "port": [
                        "397",
                        "398",
                        "399"
                      ]
                    },
                    "profileName": "device-virtual",
                    "serviceName": "device-virtual",
                    "adminState": "UNLOCKED",
                    "autoEvents": [
                      {
                        "sourceName": "Bool",
                        "interval": "10s",
                        "onChange": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a provision watcher by its unique name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The unique name of a provision watcher",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "200Example": {
                    "$ref": "#/components/examples/200Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provisionwatcher/service/name/{name}": {
      "get": {
        "summary": "Returns all provision watchers with specified device service name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name identifying a device service",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiProvisionWatchersResponse"
                },
                "examples": {
                  "GetAllProvisionWatchersResponse": {
                    "$ref": "#/components/examples/GetAllProvisionWatchersResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provisionwatcher/profile/name/{name}": {
      "get": {
        "summary": "Returns all provision watchers with specified device profile name",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name identifying a device profile",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiProvisionWatchersResponse"
                },
                "examples": {
                  "GetAllProvisionWatchersResponse": {
                    "$ref": "#/components/examples/GetAllProvisionWatchersResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/config": {
      "get": {
        "summary": "Returns the current configuration of the service.",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "config": {
                    "Writeable": {
                      "LogLevel": "INFO"
                    },
                    "Clients": {
                      "CoreData": {
                        "Host": "edgex-core-data",
                        "Port": 59880,
                        "Protocol": "http"
                      },
                      "Notifications": {
                        "Host": "edgex-support-notifications",
                        "Port": 59860,
                        "Protocol": "http"
                      }
                    },
                    "Databases": {
                      "Primary": {
                        "Username": "meta",
                        "Password": "password",
                        "Type": "redisdb",
                        "Timeout": 5000,
                        "Host": "edgex-redis",
                        "Port": 6379,
                        "Name": "metadata"
                      }
                    },
                    "Notifications": {
                      "Content": "Device update: ",
                      "Description": "Metadata device notice",
                      "Label": "metadata",
                      "PostDeviceChanges": true,
                      "Sender": "edgex-core-metadata",
                      "Slug": "device-change-"
                    },
                    "Registry": {
                      "Host": "edgex-core-consul",
                      "Port": 8500,
                      "Type": "consul"
                    },
                    "Service": {
                      "BootTimeout": 30000,
                      "CheckInterval": "10s",
                      "Host": "edgex-core-metadata",
                      "Port": 59881,
                      "SeverBindAddr": "",
                      "Protocol": "http",
                      "StartupMsg": "This is the EdgeX Core Metadata Microservice",
                      "MaxResultCount": 50000,
                      "Timeout": 5000
                    },
                    "SecretStore": {
                      "Host": "edgex-vault",
                      "Port": 8200,
                      "Path": "v1/secret/edgex/core-metadata/",
                      "Protocol": "http",
                      "Namespace": "",
                      "RootCaCertPath": "",
                      "ServerName": "edgex-vault",
                      "Authentication": {
                        "AuthType": "X-Vault-Token",
                        "AuthToken": ""
                      },
                      "TokenFile": "/tmp/edgex/secrets/core-metadata/secrets-token.json"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "An endpoint that can be used to obtain CPU/Memory usage stats for a given service.",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "metrics": {
                    "memAlloc": 877192,
                    "memFrees": 2248915,
                    "memLiveObjects": 6522,
                    "memMallocs": 2255437,
                    "memSys": 72876280,
                    "memTotalAlloc": 203821192,
                    "cpuBusyAvg": 2.2521221920656003
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "A simple 'ping' endpoint that can be used as a service healthcheck",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "timestamp": "Thu Jan 28 00:32:42 UTC 2021"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "summary": "A simple 'version' endpoint that will return the current version of the service",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "version": "2.0.0-dev.13"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddDeviceRequest": {
        "required": [
          "device"
        ],
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/CreateDevice"
          }
        },
        "description": "A request to add a new device associated with a specific device service and conforming to a specific device profile.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "AddDeviceProfileRequest": {
        "required": [
          "profile"
        ],
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/CreateDeviceProfile"
          }
        },
        "description": "A request to add a new device profile. When making this request, the ID property should not be populated.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "AddDeviceServiceRequest": {
        "required": [
          "service"
        ],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/CreateDeviceService"
          }
        },
        "description": "A request to add a new DeviceService - name must be unique",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "AddProvisionWatcherRequest": {
        "required": [
          "provisionwatcher"
        ],
        "type": "object",
        "properties": {
          "provisionwatcher": {
            "$ref": "#/components/schemas/CreateProvisionWatcher"
          }
        },
        "description": "A request to add a new ProvisionWatcher.  When making this request, the ID property should not be populated.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "AutoEvent": {
        "required": [
          "interval",
          "resource"
        ],
        "type": "object",
        "properties": {
          "interval": {
            "type": "string",
            "description": "Interval indicates how often the specific resource needs to be polled. It represents as a duration string. The format of this field is to be an unsigned integer followed by a unit which may be \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\" representing nanoseconds, microseconds, milliseconds, seconds, minutes or hours. Eg, \"100ms\", \"24h\""
          },
          "onChange": {
            "type": "boolean",
            "description": "OnChange indicates whether the device service will generate an event only, if the reading value is different from the previous one. If true, only generate events when readings change"
          },
          "sourceName": {
            "type": "string",
            "description": "SourceName indicates the name of the resource or device command in the device profile which describes the event to generate"
          }
        }
      },
      "BaseRequest": {
        "required": [
          "apiVersion"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor.",
            "format": "uuid",
            "example": "e6e8a2f4-eb14-4649-9e2b-175247911369"
          },
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs.",
            "example": "v2"
          }
        },
        "description": "Defines basic properties which all use-case specific request DTO instances should support."
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "requestId": {
            "type": "string",
            "description": "Uniquely identifies the request that resulted in this response.",
            "format": "uuid",
            "example": "e6e8a2f4-eb14-4649-9e2b-175247911369"
          },
          "statusCode": {
            "type": "integer",
            "description": "A numeric code signifying the operational status of the response."
          },
          "message": {
            "type": "string",
            "description": "A field that can contain a free-form message, such as an error message."
          }
        },
        "description": "Defines basic properties which all use-case specific response DTO instances should support"
      },
      "BaseWithIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the instance.",
            "format": "uuid"
          }
        },
        "description": "Defines basic properties which all use-case specific response DTO instances should support",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "BaseWithTotalCountResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total count of all multi instances."
          }
        },
        "description": "Defines basic properties which all use-case specific response DTO instances should support",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the device, a UUID for example",
            "format": "uuid"
          },
          "created": {
            "type": "integer",
            "description": "Created is a timestamp indicating when the entity was created."
          },
          "modified": {
            "type": "integer",
            "description": "Modified is a timestamp indicating when the entity was last modified."
          },
          "name": {
            "type": "string",
            "description": "Unique name for identifying a device"
          },
          "description": {
            "type": "string"
          },
          "adminState": {
            "type": "string",
            "description": "Admin state",
            "enum": [
              "LOCKED",
              "UNLOCKED"
            ]
          },
          "operatingState": {
            "type": "string",
            "description": "Operating state",
            "enum": [
              "UP",
              "DOWN",
              "UNKNOWN"
            ]
          },
          "lastConnected": {
            "type": "integer",
            "description": "Time (milliseconds) that the device last provided any feedback or responded to any request"
          },
          "lastReported": {
            "type": "integer",
            "description": "Time (milliseconds) that the device reported data to the core microservice"
          },
          "labels": {
            "type": "array",
            "description": "Other labels applied to the device to help with searching",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "object",
            "description": "Device service specific location (interface{} is an empty interface so it can be anything)"
          },
          "serviceName": {
            "type": "string",
            "description": "Associated Device Service - One per device"
          },
          "profileName": {
            "type": "string",
            "description": "Associated Device Profile - Describes the device"
          },
          "autoEvents": {
            "type": "array",
            "description": "A list of auto-generated events coming from the device",
            "items": {
              "$ref": "#/components/schemas/AutoEvent"
            }
          },
          "protocols": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProtocolProperties"
            },
            "description": "A map of supported protocols for the given device"
          },
          "notify": {
            "type": "boolean",
            "description": "If the 'notify' property is set to true, the device service managing the device will receive a notification"
          }
        }
      },
      "CreateDevice": {
        "required": [
          "adminState",
          "name",
          "operatingState",
          "profileName",
          "protocols",
          "serviceName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for identifying a device"
          },
          "description": {
            "type": "string"
          },
          "adminState": {
            "type": "string",
            "description": "Admin state",
            "enum": [
              "LOCKED",
              "UNLOCKED"
            ]
          },
          "operatingState": {
            "type": "string",
            "description": "Operating state",
            "enum": [
              "UP",
              "DOWN",
              "UNKNOWN"
            ]
          },
          "labels": {
            "type": "array",
            "description": "Other labels applied to the device to help with searching",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "object",
            "description": "Device service specific location (interface{} is an empty interface so it can be anything)"
          },
          "serviceName": {
            "type": "string",
            "description": "Associated Device Service - One per device"
          },
          "profileName": {
            "type": "string",
            "description": "Associated Device Profile - Describes the device"
          },
          "autoEvents": {
            "type": "array",
            "description": "A list of auto-generated events coming from the device",
            "items": {
              "$ref": "#/components/schemas/AutoEvent"
            }
          },
          "protocols": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProtocolProperties"
            },
            "description": "A map of supported protocols for the given device"
          },
          "notify": {
            "type": "boolean",
            "description": "If the 'notify' property is set to true, the device service managing the device will receive a notification"
          }
        }
      },
      "UpdateDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the device, a UUID for example",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Unique name for identifying a device"
          },
          "description": {
            "type": "string",
            "description": "Description of the device"
          },
          "adminState": {
            "type": "string",
            "description": "Admin state (locked/unlocked)"
          },
          "operatingState": {
            "type": "string",
            "description": "Operating state (enabled/disabled)"
          },
          "labels": {
            "type": "array",
            "description": "Other labels applied to the device to help with searching",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "object",
            "description": "Device service specific location (interface{} is an empty interface so it can be anything)"
          },
          "serviceName": {
            "type": "string",
            "description": "Associated Device Service - One per device"
          },
          "profileName": {
            "type": "string",
            "description": "Associated Device Profile - Describes the device"
          },
          "autoEvents": {
            "type": "array",
            "description": "A list of auto-generated events coming from the device",
            "items": {
              "$ref": "#/components/schemas/AutoEvent"
            }
          },
          "protocols": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProtocolProperties"
            },
            "description": "A map of supported protocols for the given device"
          },
          "notify": {
            "type": "boolean",
            "description": "If the 'notify' property is set to true, the device service managing the device will receive a notification"
          }
        }
      },
      "DeviceProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the device profile, a UUID for example",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Non-database identifier (must be unique)"
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "created": {
            "type": "integer",
            "description": "Created is a timestamp indicating when the entity was created."
          },
          "modified": {
            "type": "integer",
            "description": "Modified is a timestamp indicating when the entity was last modified."
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the device"
          },
          "model": {
            "type": "string",
            "description": "Model of the device"
          },
          "labels": {
            "type": "array",
            "description": "Labels used to search for groups of profiles",
            "items": {
              "type": "string"
            }
          },
          "deviceResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceResource"
            }
          },
          "deviceCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceCommand"
            }
          }
        },
        "description": "A profile defining a class of device to be onboarded, including its capabilities and data format."
      },
      "CreateDeviceProfile": {
        "required": [
          "deviceResources",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Non-database identifier (must be unique)"
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the device"
          },
          "model": {
            "type": "string",
            "description": "Model of the device"
          },
          "labels": {
            "type": "array",
            "description": "Labels used to search for groups of profiles",
            "items": {
              "type": "string"
            }
          },
          "deviceResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceResource"
            }
          },
          "deviceCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceCommand"
            }
          }
        },
        "description": "A profile defining a class of device to be onboarded, including its capabilities and data format."
      },
      "UpdateDeviceProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the device profile, a UUID for example",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Non-database identifier (must be unique)"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the device"
          },
          "model": {
            "type": "string",
            "description": "Model of the device"
          },
          "labels": {
            "type": "array",
            "description": "Labels used to search for groups of profiles",
            "items": {
              "type": "string"
            }
          },
          "deviceResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceResource"
            }
          },
          "deviceCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceCommand"
            }
          }
        },
        "description": "A profile defining a class of device to be onboarded, including its capabilities and data format."
      },
      "DeviceProfileResponse": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/DeviceProfile"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "MultiDeviceProfilesResponse": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceProfile"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseWithTotalCountResponse"
          }
        ]
      },
      "DeviceResource": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Indicate the visibility of the DeviceResource via a CoreCommand."
          },
          "tag": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ResourceProperties"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Each Device Service should define required and optional keys"
          }
        },
        "description": "DeviceResource represents a value on a device that can be read or written."
      },
      "DeviceResourceResponse": {
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/DeviceResource"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "DeviceResponse": {
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/Device"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "MultiDevicesResponse": {
        "type": "object",
        "properties": {
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseWithTotalCountResponse"
          }
        ]
      },
      "DeviceService": {
        "required": [
          "adminState",
          "baseAddress",
          "name"
        ],
        "type": "object",
        "properties": {
          "created": {
            "type": "integer",
            "description": "Created is a timestamp indicating when the entity was created."
          },
          "modified": {
            "type": "integer",
            "description": "Modified is a timestamp indicating when the entity was last modified."
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the device, a UUID for example",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Description of the device service"
          },
          "lastConnected": {
            "type": "integer",
            "description": "time in milliseconds that the device service last provided any feedback or responded to any request"
          },
          "lastReported": {
            "type": "integer",
            "description": "time in milliseconds that the device service last reported data to the core microservice"
          },
          "labels": {
            "type": "array",
            "description": "tags or other labels applied to the device service for search or other identification needs",
            "items": {
              "type": "string"
            }
          },
          "baseAddress": {
            "type": "string",
            "description": "BaseAddress is a fully qualified URI, e.g. <protocol>:\\\\<hostname>:<port>/<optional path>"
          },
          "adminState": {
            "type": "string",
            "description": "Device Service Admin State",
            "enum": [
              "LOCKED",
              "UNLOCKED"
            ]
          }
        },
        "description": "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      },
      "CreateDeviceService": {
        "required": [
          "adminState",
          "baseAddress",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Description of the device service"
          },
          "description": {
            "type": "string"
          },
          "adminState": {
            "type": "string",
            "description": "Device Service Admin State",
            "enum": [
              "LOCKED",
              "UNLOCKED"
            ]
          },
          "labels": {
            "type": "array",
            "description": "tags or other labels applied to the device service for search or other identification needs",
            "items": {
              "type": "string"
            }
          },
          "baseAddress": {
            "type": "string",
            "description": "BaseAddress is a fully qualified URI, e.g. <protocol>:\\\\<hostname>:<port>/<optional path>"
          }
        },
        "description": "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      },
      "UpdateDeviceService": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the device, a UUID for example",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Description of the device service"
          },
          "labels": {
            "type": "array",
            "description": "tags or other labels applied to the device service for search or other identification needs",
            "items": {
              "type": "string"
            }
          },
          "baseAddress": {
            "type": "string",
            "description": "BaseAddress is a fully qualified URI, e.g. <protocol>:\\\\<hostname>:<port>/<optional path>"
          },
          "adminState": {
            "type": "string",
            "description": "Device Service Admin State"
          }
        },
        "description": "A DeviceService is responsible for proxying connectivity between a set of devices and the EdgeX Foundry core services."
      },
      "DeviceServiceResponse": {
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/DeviceService"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "MultiDeviceServicesResponse": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceService"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseWithTotalCountResponse"
          }
        ]
      },
      "ProvisionWatcher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the provision watcher, a UUID for example",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Non-database identifier (must be unique)"
          },
          "created": {
            "type": "integer",
            "description": "Created is a timestamp indicating when the entity was created."
          },
          "modified": {
            "type": "integer",
            "description": "Modified is a timestamp indicating when the entity was last modified."
          },
          "labels": {
            "type": "array",
            "description": "Labels applied to the provision watcher to help with searching",
            "items": {
              "type": "string"
            }
          },
          "identifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key value pairs that identify property (MAC, HTTP,...) and value to watch for (00-05-1B-A1-99-99, 10.0.0.1,...)"
          },
          "blockingIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Set of key-values pairs that identify devices which will not be added despite matching on identifiers"
          },
          "profileName": {
            "type": "string",
            "description": "Name of the profile that should be applied to the devices available at the identifier addresses"
          },
          "serviceName": {
            "type": "string",
            "description": "Name of the device service that new devices will be associated to"
          },
          "adminState": {
            "type": "string",
            "description": "Admin state",
            "enum": [
              "LOCKED",
              "UNLOCKED"
            ]
          },
          "autoEvents": {
            "type": "array",
            "description": "Autoevents that allow device service to automatically start generating data from new devices",
            "items": {
              "$ref": "#/components/schemas/AutoEvent"
            }
          }
        },
        "description": "A ProvisionWatcher defines the filtering criteria for device auto discovery."
      },
      "CreateProvisionWatcher": {
        "required": [
          "identifiers",
          "name",
          "profile",
          "service"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Non-database identifier (must be unique)"
          },
          "labels": {
            "type": "array",
            "description": "Labels applied to the provision watcher to help with searching",
            "items": {
              "type": "string"
            }
          },
          "identifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key value pairs that identify property (MAC, HTTP,...) and value to watch for (00-05-1B-A1-99-99, 10.0.0.1,...)"
          },
          "blockingIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Set of key-values pairs that identify devices which will not be added despite matching on identifiers"
          },
          "profileName": {
            "type": "string",
            "description": "Name of the profile that should be applied to the devices available at the identifier addresses"
          },
          "serviceName": {
            "type": "string",
            "description": "Name of the device service that new devices will be associated to"
          },
          "adminState": {
            "type": "string",
            "description": "Admin state - either locked or unlocked"
          },
          "autoEvents": {
            "type": "array",
            "description": "Autoevents that allow device service to automatically start generating data from new devices",
            "items": {
              "$ref": "#/components/schemas/AutoEvent"
            }
          }
        },
        "description": "A ProvisionWatcher defines the filtering criteria for device auto discovery."
      },
      "UpdateProvisionWatcher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID uniquely identifies the provision watcher, a UUID for example",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Non-database identifier (must be unique)"
          },
          "labels": {
            "type": "array",
            "description": "Labels applied to the provision watcher to help with searching",
            "items": {
              "type": "string"
            }
          },
          "identifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of key value pairs that identify property (MAC, HTTP,...) and value to watch for (00-05-1B-A1-99-99, 10.0.0.1,...)"
          },
          "blockingIdentifiers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Set of key-values pairs that identify devices which will not be added despite matching on identifiers"
          },
          "profileName": {
            "type": "string",
            "description": "Name of the profile that should be applied to the devices available at the identifier addresses"
          },
          "serviceName": {
            "type": "string",
            "description": "Name of the device service that new devices will be associated to"
          },
          "adminState": {
            "type": "string",
            "description": "Admin state",
            "enum": [
              "LOCKED",
              "UNLOCKED"
            ]
          },
          "autoEvents": {
            "type": "array",
            "description": "Autoevents that allow device service to automatically start generating data from new devices",
            "items": {
              "$ref": "#/components/schemas/AutoEvent"
            }
          }
        },
        "description": "A ProvisionWatcher defines the filtering criteria for device auto discovery."
      },
      "ProvisionWatcherResponse": {
        "type": "object",
        "properties": {
          "provisionwatcher": {
            "$ref": "#/components/schemas/ProvisionWatcher"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "MultiProvisionWatchersResponse": {
        "type": "object",
        "properties": {
          "provisionwatchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvisionWatcher"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseWithTotalCountResponse"
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "A response type for returning a generic error to the caller.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "ConfigResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "config": {
            "type": "object",
            "description": "A string-ified representation of the service's configuration. For purposes of this specification, a string has been used since configuration structure differs from service to service."
          }
        },
        "description": "An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
      },
      "MetricsResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "metrics": {
            "$ref": "#/components/schemas/MetricsResponse_metrics"
          }
        },
        "description": "A response from the /metrics endpoint providing memory and cpu utilization stats."
      },
      "PingResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "timestamp": {
            "type": "string",
            "description": "Outputs the current server timestamp in RFC1123 format",
            "example": "Mon, 02 Jan 2006 15:04:05 MST"
          }
        }
      },
      "DeviceCommand": {
        "required": [
          "name",
          "readWrite",
          "resourceOperations"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Indicate the visibility of the DeviceCommand via a CoreCommand."
          },
          "readWrite": {
            "type": "string",
            "description": "Read/Write Permissions set for this DeviceCommand. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service.",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "resourceOperations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceOperation"
            }
          }
        },
        "description": "Defines read/write capabilities native to the device"
      },
      "ResourceProperties": {
        "required": [
          "readWrite",
          "valueType"
        ],
        "type": "object",
        "properties": {
          "valueType": {
            "type": "string",
            "description": "Indicates the datatype of the value property",
            "enum": [
              "Bool",
              "String",
              "Uint8",
              "Uint16",
              "Uint32",
              "Uint64",
              "Int8",
              "Int16",
              "Int32",
              "Int64",
              "Float32",
              "Float64",
              "Binary",
              "BoolArray",
              "StringArray",
              "Uint8Array",
              "Uint16Array",
              "Uint32Array",
              "Uint64Array",
              "Int8Array",
              "Int16Array",
              "Int32Array",
              "Int64Array",
              "Float32Array",
              "Float64Array"
            ]
          },
          "readWrite": {
            "type": "string",
            "description": "Read/Write Permissions set for this ResourceProperties. The value can be R, W, or RW. R enables GET command, and W enables SET command in the Core Command Service.",
            "enum": [
              "R",
              "W",
              "RW"
            ]
          },
          "units": {
            "type": "string",
            "description": "A string which describes the measurement units associated with a property value  Examples include \"deg/s\", \"degreesFarenheit\", \"G\", or \"% Relative Humidity\""
          },
          "minimum": {
            "type": "string",
            "description": "Minimum value that can be get/set from this property"
          },
          "maximum": {
            "type": "string",
            "description": "Maximum value that can be get/set from this property"
          },
          "defaultValue": {
            "type": "string",
            "description": "Default value set to this property if no argument is passed. If present, should be compatible with the Type field"
          },
          "mask": {
            "type": "string",
            "description": "Mask to be applied prior to get/set of property. Only valid where Type is one of the integer types."
          },
          "shift": {
            "type": "string",
            "description": "Shift to be applied after masking, prior to get/set of property. Only valid where Type is one of the integer types"
          },
          "scale": {
            "type": "string",
            "description": "Multiplicative factor to be applied after shifting, prior to get/set of property. Only valid where Type is one of the integer or float types"
          },
          "offset": {
            "type": "string",
            "description": "Additive factor to be applied after multiplying, prior to get/set of property. Only valid where Type is one of the integer or float types"
          },
          "base": {
            "type": "string",
            "description": "Base for property to be applied to, leave 0 for no power operation (i.e. base ^ property: 2 ^ 10). Only valid where Type is one of the integer or float types."
          },
          "assertion": {
            "type": "string",
            "description": "Required value of the property, set for checking error state.  Failing an assertion condition will mark the device with an error state"
          },
          "mediaType": {
            "type": "string",
            "description": "A string value used to indicate the type of binary data if Type=binary"
          }
        },
        "description": "Defines constraints with regard to the range of acceptable values assigned to an event reading and defined as a property within a device profile."
      },
      "ProtocolProperties": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "ResourceOperation": {
        "required": [
          "deviceResource"
        ],
        "type": "object",
        "properties": {
          "deviceResource": {
            "type": "string",
            "description": "The replacement of Object field. Must name a DeviceResource in this profile"
          },
          "defaultValue": {
            "type": "string",
            "description": "If present, should be compatible with the Type field of the named DeviceResource"
          },
          "mappings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Only valid where the Type of the named DeviceResource is String"
          }
        },
        "description": "Defines an operation of which a device is capable."
      },
      "RequestEnvelope": {
        "required": [
          "action",
          "content",
          "strategy",
          "type",
          "version"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Indicates the type of operation applicable to the wrapped request. Valid values are 'create','read','update','delete', and 'command'"
          },
          "content": {
            "type": "string",
            "description": "A byte array containing a marshalled request type instance. This is the specific, semantically identifiable request -- such as an AddDeviceRequest.",
            "format": "byte"
          },
          "strategy": {
            "type": "string",
            "description": "Indicates the expectation of whether a response should be produced synchronously or asynchronously. If asynchronously, desire for either a polling or push/callback should be provided. Valid values are 'sync','async-push','async-poll'"
          },
          "type": {
            "type": "string",
            "description": "The name of the type applicable to the request instance contained in the 'content' property."
          },
          "version": {
            "type": "string",
            "description": "Proposed field for explicitly defining version of request DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver",
            "example": "2.0.x"
          }
        },
        "description": "A wrapper type for use when sending a request to the /batch endpoint. Each individual request type in the HTTP request should be wrapped in an envelope to facilitate instantiation of the correct routing handler. See property descriptions below for more details."
      },
      "ResponseEnvelope": {
        "required": [
          "action",
          "content",
          "strategy",
          "type",
          "version"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Indicates the type of operation applicable to the wrapped response. This should be recapitulated from the originating request. Valid values are 'create','read','update','delete', and 'command'"
          },
          "content": {
            "type": "string",
            "description": "A byte array containing a marshalled response type instance. This is the specific, semantically identifiable response -- such as an BaseWithIdResponse.",
            "format": "byte"
          },
          "strategy": {
            "type": "string",
            "description": "Recapitulates the expectation with regard to the delivery of response that was specified on the originating request. Valid values are 'sync','async-push','async-poll'"
          },
          "type": {
            "type": "string",
            "description": "The name of the type applicable to the response instance contained in the 'content' property."
          },
          "version": {
            "type": "string",
            "description": "Proposed field for explicitly defining version of response DTO. This is for advertising compatibility between a publisher/subscriber or requester/receiver",
            "example": "2.0.x"
          }
        },
        "description": "A wrapper type for use when receiving a response from the /batch endpoint. Each individual response type in the HTTP response should be wrapped in an envelope to facilitate unmarshalling by the client. See property descriptions below for more details."
      },
      "UpdateDeviceRequest": {
        "required": [
          "device"
        ],
        "type": "object",
        "properties": {
          "device": {
            "$ref": "#/components/schemas/UpdateDevice"
          }
        },
        "description": "A request to update an existing device definition. 'id' and 'deviceName' must be populated in order to identify the device. If the 'notify' property is set to true, the device service managing the device will receive a notification. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "UpdateDeviceProfileRequest": {
        "required": [
          "profile"
        ],
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/UpdateDeviceProfile"
          }
        },
        "description": "A request to update an existing device profile definition. 'id' and 'name' must be populated in order to identify the profile. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "UpdateDeviceServiceRequest": {
        "required": [
          "service"
        ],
        "type": "object",
        "properties": {
          "service": {
            "$ref": "#/components/schemas/UpdateDeviceService"
          }
        },
        "description": "A request to update an existing device service definition. 'id' and 'deviceServiceName' must be populated in order to identify the service. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "UpdateProvisionWatcherRequest": {
        "required": [
          "provisionwatcher"
        ],
        "type": "object",
        "properties": {
          "provisionwatcher": {
            "$ref": "#/components/schemas/UpdateProvisionWatcher"
          }
        },
        "description": "A request to update an existing provision watcher definition. 'id' and 'name' must be populated in order to identify the provisionwatcher. Any other property that is populated in the request will be updated. Empty/blank properties will not be considered.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "VersionResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "version": {
            "type": "string",
            "description": "The latest version supported by the service."
          }
        },
        "description": "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      },
      "deviceprofile_uploadfile_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "The Device Profile YAML file binary",
            "format": "binary"
          }
        }
      },
      "deviceprofile_uploadfile_body_1": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "The Device Profile YAML file binary",
            "format": "binary"
          }
        }
      },
      "MetricsResponse_metrics": {
        "type": "object",
        "properties": {
          "memAlloc": {
            "type": "integer",
            "description": "Alloc is bytes of allocated heap objects."
          },
          "memFrees": {
            "type": "integer",
            "description": "Frees is the cumulative count of heap objects freed."
          },
          "memLiveObjects": {
            "type": "integer",
            "description": "The number of live objects is Mallocs - Frees."
          },
          "memMallocs": {
            "type": "integer",
            "description": "The cumulative count of heap objects allocated."
          },
          "memSys": {
            "type": "integer",
            "description": "The total bytes of memory obtained from the OS."
          },
          "memTotalAlloc": {
            "type": "integer",
            "description": "Cumulative bytes allocated for heap objects."
          },
          "cpuBusyAvg": {
            "type": "number",
            "description": "Indicates the average level of CPU utilization"
          }
        }
      }
    },
    "parameters": {
      "offsetParam": {
        "name": "offset",
        "in": "query",
        "description": "The number of items to skip before starting to collect the result set.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "minimum": 0,
          "type": "integer",
          "default": 0
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "minimum": -1,
          "type": "integer",
          "default": 20
        }
      },
      "correlatedRequestHeader": {
        "name": "X-Correlation-ID",
        "in": "header",
        "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
      },
      "labelsParam": {
        "name": "labels",
        "in": "query",
        "description": "Allows for querying a given object by associated user-defined label. More than one label may be specified via a comma-delimited list.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "examples": {
      "200Example": {
        "value": {
          "apiVersion": "v2",
          "requestId": "2463bff9-aa53-4bc4-bebf-42fe81146ea8",
          "statusCode": 200,
          "message": ""
        }
      },
      "400Example": {
        "value": {
          "apiVersion": "v2",
          "requestId": "73f0932c-0148-11eb-adc1-0242ac120002",
          "statusCode": 400,
          "message": "Bad Request"
        }
      },
      "404Example": {
        "value": {
          "apiVersion": "v2",
          "requestId": "84c9489c-0148-11eb-adc1-0242ac120002",
          "statusCode": 404,
          "message": "Not Found"
        }
      },
      "409Example": {
        "value": {
          "apiVersion": "v2",
          "requestId": "8a41b3f4-0148-11eb-adc1-0242ac120002",
          "statusCode": 409,
          "message": "Data Duplicate"
        }
      },
      "409DeleteExample": {
        "value": {
          "apiVersion": "v2",
          "requestId": "8a41b3f4-0148-11eb-adc1-0242ac120002",
          "statusCode": 409,
          "message": "associated object exists"
        }
      },
      "500Example": {
        "value": {
          "apiVersion": "v2",
          "requestId": "9524082e-96c0-42bb-b5d0-50c869444cc7",
          "statusCode": 500,
          "message": "Internal Server Error"
        }
      },
      "MultiPOSTStatusExample": {
        "value": [
          {
            "apiVersion": "v2",
            "requestId": "592b98aa-1e4e-46f2-992a-9e6ef844270f",
            "statusCode": 201,
            "id": "6f52dc3c-5548-4142-baa6-052ac4bece93",
            "message": ""
          },
          {
            "apiVersion": "v2",
            "requestId": "d3742440-c319-4a9f-a488-b54cf992e143",
            "statusCode": 409,
            "message": "Duplicated"
          },
          {
            "apiVersion": "v2",
            "requestId": "791846bd-e702-4c7a-9d22-3ceee2f08427",
            "statusCode": 500,
            "message": "Internal Server Error"
          }
        ]
      },
      "MultiUpdateStatusExample": {
        "value": [
          {
            "apiVersion": "v2",
            "requestId": "592b98aa-1e4e-46f2-992a-9e6ef844270f",
            "statusCode": 200,
            "message": ""
          },
          {
            "apiVersion": "v2",
            "requestId": "8e025b94-1512-4ec4-a9bd-3111cb278379",
            "statusCode": 404,
            "message": "Not Found"
          },
          {
            "apiVersion": "v2",
            "requestId": "d3742440-c319-4a9f-a488-b54cf992e143",
            "statusCode": 409,
            "message": "Duplicated"
          },
          {
            "apiVersion": "v2",
            "requestId": "791846bd-e702-4c7a-9d22-3ceee2f08427",
            "statusCode": 500,
            "message": "Internal Server Error"
          }
        ]
      },
      "AddDeviceRequest": {
        "value": [
          {
            "apiVersion": "v2",
            "device": {
              "name": "AWS IOT Button1",
              "description": "Home automation system",
              "adminState": "UNLOCKED",
              "operatingState": "UP",
              "labels": [
                "home",
                "hvac",
                "thermostat"
              ],
              "location": "{lat:45.45,long:47.80}",
              "serviceName": "device-modbus",
              "profileName": "Google-Home-profile",
              "autoEvents": [
                {
                  "interval": "300ms",
                  "onChange": true,
                  "sourceName": "CurrentHumidity"
                }
              ],
              "protocols": {
                "modbus-tcp": {
                  "Address": "localhost",
                  "Port": "502",
                  "UnitID": "1"
                }
              },
              "notify": false
            }
          }
        ]
      },
      "UpdateDeviceRequest": {
        "value": [
          {
            "apiVersion": "v2",
            "device": [
              {
                "id": "edaa7c0f-05c6-4368-89f1-3be5e197cf6a",
                "name": "AWS IOT Button1",
                "operatingState": "DOWN",
                "labels": [
                  "home"
                ],
                "autoEvents": [
                  {
                    "interval": "100ms",
                    "onChange": true,
                    "sourceName": "CurrentHumidity"
                  }
                ]
              },
              {
                "id": "771de9f4-b5a3-4eba-b5e7-ec6e14fa3de7",
                "name": "AWS IOT Button2",
                "description": "Home automation system",
                "adminState": "LOCKED",
                "operatingState": "UP"
              }
            ]
          }
        ]
      },
      "AddDeviceServiceRequest": {
        "value": [
          {
            "requestId": "e6e8a2f4-eb14-4649-9e2b-175247911369",
            "apiVersion": "v2",
            "service": {
              "name": "home thermostat device service",
              "description": "manage homethermostats",
              "adminState": "UNLOCKED",
              "labels": [
                "hvac",
                "thermostat"
              ],
              "baseAddress": "http://home-device-service:49990"
            }
          }
        ]
      },
      "AddDeviceProfileRequest": {
        "value": [
          {
            "requestId": "e6e8a2f4-eb14-4649-9e2b-175247911369",
            "apiVersion": "v2",
            "profile": {
              "name": "Simple-Device-Profile",
              "manufacturer": "Simple Corp.",
              "model": "SP-01",
              "labels": [
                "modbus"
              ],
              "description": "Example of Simple Device Profile",
              "deviceResources": [
                {
                  "name": "SwitchButton",
                  "description": "Switch On/Off.",
                  "properties": {
                    "valueType": "String",
                    "readWrite": "RW",
                    "defaultValue": "On",
                    "units": "On/Off"
                  }
                }
              ],
              "deviceCommands": [
                {
                  "name": "Switch",
                  "readWrite": "RW",
                  "resourceOperations": [
                    {
                      "deviceResource": "SwitchButton",
                      "DefaultValue": "false"
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      "AddProvisionWatcherRequest": {
        "value": [
          {
            "requestId": "fb34e122-84d6-4c4c-a0ba-ac181021dc6b",
            "apiVersion": "v2",
            "provisionwatcher": {
              "name": "Simple-Provision-Watcher",
              "labels": [
                "simple"
              ],
              "identifiers": {
                "address": "localhost",
                "port": "3[0-9]{2}"
              },
              "blockingidentifiers": {
                "port": [
                  "397",
                  "398",
                  "399"
                ]
              },
              "profileName": "device-simple",
              "serviceName": "device-simple",
              "adminState": "UNLOCKED"
            }
          }
        ]
      },
      "GetAllDevicesResponse": {
        "value": {
          "apiVersion": "v2",
          "requestId": "479439fa-0148-11eb-adc1-0242ac120002",
          "statusCode": 200,
          "totalCount": 3,
          "devices": [
            {
              "id": "55b68fcf-0fd2-445a-9fae-670b37fb9274",
              "name": "Random-Boolean-Device",
              "description": "Example of Device Virtual",
              "created": 1600927134931,
              "modified": 1600927134931,
              "adminState": "UNLOCKED",
              "operatingState": "UP",
              "lastConnected": 0,
              "lastReported": 0,
              "labels": [
                "device-virtual-example"
              ],
              "location": "",
              "serviceName": "device-virtual",
              "profileName": "Random-Boolean-Device",
              "autoEvents": [
                {
                  "interval": "10s",
                  "onChange": false,
                  "sourceName": "Bool"
                }
              ],
              "protocols": {
                "other": {
                  "Address": "device-virtual-bool-01",
                  "Port": "300"
                }
              }
            },
            {
              "id": "03bd5ce0-b967-4165-a335-775fea604142",
              "name": "Random-UnsignedInteger-Device",
              "description": "Example of Device Virtual",
              "created": 1600927134949,
              "modified": 1600927134949,
              "adminState": "UNLOCKED",
              "operatingState": "UP",
              "lastConnected": 0,
              "lastReported": 0,
              "labels": [
                "device-virtual-example"
              ],
              "location": "",
              "serviceName": "device-virtual",
              "profileName": "Random-Boolean-Device",
              "autoEvents": [
                {
                  "interval": "20s",
                  "onChange": false,
                  "sourceName": "Uint8"
                },
                {
                  "interval": "20s",
                  "onChange": false,
                  "sourceName": "Uint16"
                }
              ],
              "protocols": {
                "other": {
                  "Address": "device-virtual-uint-01",
                  "Port": "300"
                }
              }
            }
          ]
        }
      },
      "GetAllDeviceProfilesResponse": {
        "value": {
          "apiVersion": "v2",
          "requestId": "bc979763-afde-492c-b0a2-79ff3025b6de",
          "statusCode": 200,
          "totalCount": 3,
          "profiles": [
            {
              "id": "9d33b6fd-f38b-4f0e-aef4-0332578ff2c0",
              "name": "Device-Virtual-Profile",
              "description": "Example of Device-Virtual",
              "created": 1600927134904,
              "modified": 1600927134904,
              "manufacturer": "IOTech",
              "model": "Device-Virtual-01",
              "labels": [
                "device-virtual-example"
              ],
              "deviceResources": [
                {
                  "description": "Generate random float32 value",
                  "name": "Float32",
                  "properties": {
                    "type": "Float32",
                    "readWrite": "RW",
                    "defaultValue": "0"
                  }
                }
              ],
              "deviceCommands": [
                {
                  "name": "Float32",
                  "readWrite": "RW",
                  "resourceOperations": [
                    {
                      "deviceResource": "Float32",
                      "defaultValue": "0.0123"
                    }
                  ]
                }
              ]
            },
            {
              "id": "3edf4fe9-b3b8-4f78-bb94-ff55f7d9f316",
              "name": "Device-Modbus-Profile",
              "description": "Example of Device-Modbus",
              "created": 1600927134904,
              "modified": 1600927134904,
              "manufacturer": "IOTech",
              "model": "Device-Modbus-01",
              "labels": [
                "device-modbus-example"
              ],
              "deviceResources": [
                {
                  "description": "Generate random float32 value",
                  "name": "Float32",
                  "properties": {
                    "type": "Float32",
                    "readWrite": "RW",
                    "defaultValue": "0"
                  }
                }
              ],
              "deviceCommands": [
                {
                  "name": "Float32",
                  "readWrite": "RW",
                  "resourceOperations": [
                    {
                      "deviceResource": "1",
                      "defaultValue": "false"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "GetAllProvisionWatchersResponse": {
        "value": {
          "apiVersion": "v2",
          "requestId": "4e63c9b9-9cc4-45e4-9bf0-6d994a3860b4",
          "statusCode": 200,
          "totalCount": 3,
          "provisionwatchers": [
            {
              "id": "1ff7762f-c432-4af0-9a5d-756bbc92744b",
              "name": "virtual-watcher",
              "created": 1600927134890,
              "modified": 1600927134890,
              "labels": [
                "virtual"
              ],
              "identifiers": {
                "address": "localhost",
                "port": "3[0-9]{2}"
              },
              "blockingIdentifiers": {
                "port": [
                  "397",
                  "398",
                  "399"
                ]
              },
              "profileName": "device-virtual",
              "serviceName": "device-virtual",
              "adminState": "UNLOCKED",
              "autoEvents": [
                {
                  "sourceName": "Bool",
                  "interval": "10s",
                  "onChange": false
                }
              ]
            },
            {
              "id": "90c971f0-cb84-4bda-a9f0-d9494196b54d",
              "name": "simple-watcher",
              "created": 0,
              "modified": 0,
              "labels": [
                "simple"
              ],
              "identifiers": {
                "address": "localhost",
                "port": "4[0-9]{2}"
              },
              "blockingIdentifiers": {
                "port": [
                  "497",
                  "498",
                  "499"
                ]
              },
              "profileName": "device-simple",
              "serviceName": "device-simple",
              "adminState": "UNLOCKED"
            }
          ]
        }
      }
    },
    "headers": {
      "correlatedResponseHeader": {
        "description": "A response header that returns the unique correlation ID used to initiate the request.",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
      }
    }
  }
}