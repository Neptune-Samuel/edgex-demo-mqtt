{
  "openapi": "3.0.0",
  "info": {
    "title": "Edgex Foundry - Core Data API",
    "description": "This is the definition of the API for the Core Data service in the EdgeX Foundry IOT microservice platform. Core Data is responsible for storing event and reading data ingested from edge devices in the environment.",
    "version": "2.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:59880/api/v2",
      "description": "URL for local development and testing"
    }
  ],
  "paths": {
    "/event/{profileName}/{deviceName}/{sourceName}": {
      "post": {
        "summary": "Allows for the ingestion of event/reading data, and the deviceName and profileName of Event must match to the given deviceName and profileName as specified in the path",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "profileName",
            "in": "path",
            "description": "Uniquely identifies a given device profile",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "Uniquely identifies a given device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "The sourceName is the name of the source that created the Event (ResourceName or CommandName)",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEventRequest"
              },
              "example": {
                "apiVersion": "v2",
                "event": {
                  "apiVersion": "v2",
                  "deviceName": "device-002",
                  "profileName": "profile-002",
                  "sourceName": "resource-002",
                  "id": "d5471d59-2810-419a-8744-18eb8fa03465",
                  "origin": 1602168089665565200,
                  "tags": {
                    "Gateway": "HoustonStore-000123",
                    "Latitude": {
                      "degrees": 25,
                      "minute": 1,
                      "second": 26.6268000000062
                    },
                    "Longitude": {
                      "degree": 121,
                      "minute": 31,
                      "second": 19.600799999980154
                    }
                  },
                  "readings": [
                    {
                      "deviceName": "device-002",
                      "resourceName": "resource-002",
                      "profileName": "profile-002",
                      "id": "7003cacc-0e00-4676-977c-4e58b9612abd",
                      "origin": 1602168089665565200,
                      "valueType": "Float32",
                      "value": "12.2"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Indicates the event has been successfully added.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseWithIdResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "statusCode": 201,
                  "id": "d5471d59-2810-419a-8744-18eb8fa03465"
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict detected. Event Id must be universally unique.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "409Example": {
                    "$ref": "#/components/examples/409Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/all": {
      "get": {
        "summary": "Given the entire range of events sorted by origin descending, returns a portion of that range according to the offset and limit parameters.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiEventsResponse"
                },
                "examples": {
                  "MultiEventsExample": {
                    "$ref": "#/components/examples/AllEventsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/id/{id}": {
      "get": {
        "summary": "Returns an event by ID",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "id",
            "in": "path",
            "description": "An ID of datatype string, by default a GUID.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                },
                "examples": {
                  "EventExample": {
                    "$ref": "#/components/examples/EventExample"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an event by ID",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "id",
            "in": "path",
            "description": "An ID of datatype string, by default a GUID.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                },
                "examples": {
                  "200Example": {
                    "$ref": "#/components/examples/200Example"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/count": {
      "get": {
        "summary": "Return a count of all of events currently stored in the database.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                },
                "examples": {
                  "CountExample": {
                    "$ref": "#/components/examples/CountExample"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/count/device/name/{name}": {
      "get": {
        "summary": "Return a count of all of events currently stored in the database, sourced from the specified device.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Uniquely identifies a given device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                },
                "examples": {
                  "CountExample": {
                    "$ref": "#/components/examples/CountExample"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/device/name/{name}": {
      "get": {
        "summary": "Given the entire range of events sorted by origin descending, returns a portion of that range according to the device name, offset and limit parameters.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Uniquely identifies a given device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiEventsResponse"
                },
                "examples": {
                  "MultiEventsExample": {
                    "$ref": "#/components/examples/AllEventsExample"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes all events for the specified device",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Uniquely identifies a given device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete request accepted",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                },
                "examples": {
                  "202Example": {
                    "$ref": "#/components/examples/202Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/start/{start}/end/{end}": {
      "get": {
        "summary": "Return a paginated range of events sorted by origin descending with a create date inside the specified start/end values.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "start",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the start of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the end of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiEventsResponse"
                },
                "examples": {
                  "MultiEventsExample": {
                    "$ref": "#/components/examples/AllEventsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "\"{start}\" and \"{end}\" are unix time, and \"{end}\" should be greater than \"{start}\"",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/age/{age}": {
      "delete": {
        "summary": "Remove all old events (and associated readings) based on delimiting age",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "age",
            "in": "path",
            "description": "Age in nanoseconds since origin timestamp for a given event",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Delete request accepted",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                },
                "examples": {
                  "202Example": {
                    "$ref": "#/components/examples/202Example"
                  }
                }
              }
            }
          },
          "400": {
            "description": "\"{age}\" must be a parsable unix timestamp",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/all": {
      "get": {
        "summary": "Given the entire range of readings sorted by origin descending, returns a portion of that range according to the offset and limit parameters. Readings returned will all inherit from BaseReading but their concrete types will be either SimpleReading or BinaryReading, potentially interleaved.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/AllReadingsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/count": {
      "get": {
        "summary": "Return a count of all of readings currently stored in the database.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                },
                "examples": {
                  "CountExample": {
                    "$ref": "#/components/examples/CountExample"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/count/device/name/{name}": {
      "get": {
        "summary": "Return a count of all of readings currently stored in the database, sourced from the specified device.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Uniquely identifies a given device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                },
                "examples": {
                  "CountExample": {
                    "$ref": "#/components/examples/CountExample"
                  }
                }
              }
            }
          },
          "404": {
            "description": "The requested resource does not exist",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "404Example": {
                    "$ref": "#/components/examples/404Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/device/name/{name}": {
      "get": {
        "summary": "Given a range of readings from the specified device sorted by origin descending, returns a portion of that range according to the device name, offset and limit parameters.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Uniquely identifies a given device",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/AllReadingsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/resourceName/{resourceName}": {
      "get": {
        "summary": "Returns a paginated list of readings whose resource name is of the specified one.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The device resource name of readings.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/AllReadingsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state. \"{resourceName}\" could only contain reserved characters as defined in https://tools.ietf.org/html/rfc3986#section-2.3",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/device/name/{deviceName}/resourceName/{resourceName}": {
      "get": {
        "summary": "Returns a paginated range of readings by deviceName and resourceName",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name name of readings",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The device resource name of readings.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/AllReadingsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/start/{start}/end/{end}": {
      "get": {
        "summary": "Return a paginated range of readings with a create date inside the specified start/end values.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "start",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the start of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the end of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/AllReadingsExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "\"{start}\" and \"{end}\" are unix time, and \"{end}\" should be greater than \"{start}\"",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/resourceName/{resourceName}/start/{start}/end/{end}": {
      "get": {
        "summary": "Return a paginated range of readings by resourceName and specified time range.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The device resource name of readings",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the start of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the end of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/ReadingsByResourceNameAndTimeRangeExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "\"{start}\" and \"{end}\" are unix time, and \"{end}\" should be greater than \"{start}\"",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/device/name/{deviceName}/resourceName/{resourceName}/start/{start}/end/{end}": {
      "get": {
        "summary": "Return a paginated range of readings by deviceName, resourceName and specified time range.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name name of readings",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The device resource name of readings",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the start of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the end of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/ReadingsByResourceNameAndTimeRangeExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reading/device/name/{deviceName}/start/{start}/end/{end}": {
      "get": {
        "summary": "Return a paginated range of readings by deviceName and specified time range while also allowing multiple resource names specified in the request body as query criteria.  If resource names or request body is empty, return all the readings that meet deviceName and specified time range.",
        "parameters": [
          {
            "name": "X-Correlation-ID",
            "in": "header",
            "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
          },
          {
            "name": "deviceName",
            "in": "path",
            "description": "The device name name of readings",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the start of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "path",
            "description": "Unix timestamp (nanoseconds) indicating the end of a date/time range",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": -1,
              "type": "integer",
              "default": 20
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEventRequest"
              },
              "example": {
                "resourceNames": [
                  "resource-001",
                  "resource-002"
                ]
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiReadingsResponse"
                },
                "examples": {
                  "MultiReadingsExample": {
                    "$ref": "#/components/examples/ReadingsByResourceNameAndTimeRangeExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request is in an invalid state.",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "400Example": {
                    "$ref": "#/components/examples/400Example"
                  }
                }
              }
            }
          },
          "416": {
            "description": "Request range is not satisfiable",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "416Example": {
                    "$ref": "#/components/examples/416Example"
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred on the server",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/config": {
      "get": {
        "summary": "Returns the current configuration of the service.",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "config": {
                    "Writeable": {
                      "PersistData": true,
                      "LogLevel": "INFO"
                    },
                    "MessageQueue": {
                      "Host": "*",
                      "Port": 5563,
                      "Protocol": "tcp",
                      "Type": "zero",
                      "Topic": "events",
                      "Optional": {
                        "AutoReconnect": "true",
                        "ClientId": "core-data",
                        "ConnectTimeout": "5",
                        "KeepAlive": "10",
                        "Password": "",
                        "Qos": "0",
                        "Retained": "false",
                        "SkipCertVerify": "false",
                        "Username": ""
                      }
                    },
                    "Clients": {
                      "Logging": {
                        "Host": "localhost",
                        "Port": 48061,
                        "Protocol": "http"
                      },
                      "Metadata": {
                        "Host": "edgex-core-metadata",
                        "Port": 59881,
                        "Protocol": "http"
                      }
                    },
                    "Databases": {
                      "Primary": {
                        "Username": "core",
                        "Password": "password",
                        "Type": "redisdb",
                        "Timeout": 5000,
                        "Host": "edgex-redis",
                        "Port": 6379,
                        "Name": "coredata"
                      }
                    },
                    "Logging": {
                      "EnableRemote": false,
                      "File": ""
                    },
                    "Registry": {
                      "Host": "edgex-core-consul",
                      "Port": 8500,
                      "Type": "consul"
                    },
                    "Service": {
                      "BootTimeout": 30000,
                      "CheckInterval": "10s",
                      "Host": "edgex-core-data",
                      "Port": 59880,
                      "SeverBindAddr": "",
                      "Protocol": "http",
                      "StartupMsg": "This is the Core Data Microservice",
                      "MaxResultCount": 50000,
                      "Timeout": 5000
                    },
                    "SecretStore": {
                      "Host": "edgex-vault",
                      "Port": 8200,
                      "Path": "v1/secret/edgex/core-data/",
                      "Protocol": "http",
                      "Namespace": "",
                      "RootCaCertPath": "",
                      "ServerName": "edgex-vault",
                      "Authentication": {
                        "AuthType": "X-Vault-Token",
                        "AuthToken": ""
                      },
                      "TokenFile": "/tmp/edgex/secrets/core-data/secrets-token.json"
                    },
                    "Startup": {
                      "Duration": 30,
                      "Interval": 1
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Interval Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "An endpoint that can be used to obtain CPU/Memory usage stats for a given service.",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "metrics": {
                    "memAlloc": 877192,
                    "memFrees": 2248915,
                    "memLiveObjects": 6522,
                    "memMallocs": 2255437,
                    "memSys": 72876280,
                    "memTotalAlloc": 203821192,
                    "cpuBusyAvg": 2.2521221920656003
                  }
                }
              }
            }
          },
          "500": {
            "description": "Interval Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "A simple 'ping' endpoint that can be used as a service healthcheck",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "timestamp": "Mon, 02 Jan 2006 15:04:05 MST"
                }
              }
            }
          },
          "500": {
            "description": "Interval Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "summary": "A simple 'version' endpoint that will return the current version of the service",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                },
                "example": {
                  "apiVersion": "v2",
                  "version": "master"
                }
              }
            }
          },
          "500": {
            "description": "Interval Server Error",
            "headers": {
              "X-Correlation-ID": {
                "$ref": "#/components/headers/correlatedResponseHeader"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "500Example": {
                    "$ref": "#/components/examples/500Example"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddEventRequest": {
        "required": [
          "event"
        ],
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/Event"
          }
        },
        "description": "A request for ingesting a new event/reading data",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRequest"
          }
        ]
      },
      "BaseReading": {
        "required": [
          "deviceName",
          "origin",
          "profileName",
          "resourceName",
          "valueType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the reading",
            "format": "uuid"
          },
          "origin": {
            "type": "integer",
            "description": "A Unix timestamp (nanoseconds) indicating when the reading was originated at the source device"
          },
          "deviceName": {
            "type": "string",
            "description": "The name of the device from which the reading originated"
          },
          "resourceName": {
            "type": "string",
            "description": "The device resource name for the reading"
          },
          "profileName": {
            "type": "string",
            "description": "The device profile name for the reading"
          },
          "valueType": {
            "type": "string",
            "description": "Indicates the datatype of the value property",
            "enum": [
              "Bool",
              "String",
              "Uint8",
              "Uint16",
              "Uint32",
              "Uint64",
              "Int8",
              "Int16",
              "Int32",
              "Int64",
              "Float32",
              "Float64",
              "Binary",
              "BoolArray",
              "StringArray",
              "Uint8Array",
              "Uint16Array",
              "Uint32Array",
              "Uint64Array",
              "Int8Array",
              "Int16Array",
              "Int32Array",
              "Int64Array",
              "Float32Array",
              "Float64Array",
              "Object"
            ]
          }
        },
        "description": "A base reading type containing common properties from which more specific reading types inherit. This definition should not be implemented but is used elsewhere to indicate support for a mixed list of simple/binary readings in a single event."
      },
      "BaseRequest": {
        "required": [
          "apiVersion"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Uniquely identifies this request. For implementation, recommend this value be generated by the type's constructor.",
            "format": "uuid",
            "example": "e6e8a2f4-eb14-4649-9e2b-175247911369"
          },
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs.",
            "example": "v2"
          }
        },
        "description": "Defines basic properties which all use-case specific request DTO instances should support."
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "requestId": {
            "type": "string",
            "description": "Uniquely identifies the request that resulted in this response.",
            "format": "uuid",
            "example": "e6e8a2f4-eb14-4649-9e2b-175247911369"
          },
          "message": {
            "type": "string",
            "description": "A field that can contain a free-form message, such as an error message."
          },
          "statusCode": {
            "type": "integer",
            "description": "A numeric code signifying the operational status of the response."
          }
        },
        "description": "Defines basic properties which all use-case specific response DTO instances should support"
      },
      "BaseWithIdResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the instance.",
            "format": "uuid"
          }
        },
        "description": "Defines basic properties which all use-case specific response DTO instances should support",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "BaseWithTotalCountResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "The total count of all multi instances."
          }
        },
        "description": "Defines basic properties which all use-case specific response DTO instances should support",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "BinaryReading": {
        "description": "An event reading for a binary data type",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseReading"
          },
          {
            "required": [
              "binaryValue",
              "mediaType"
            ],
            "type": "object",
            "properties": {
              "binaryValue": {
                "type": "string",
                "description": "If the value of the reading is binary, it will be found in this property as a byte array",
                "format": "byte"
              },
              "mediaType": {
                "type": "string",
                "description": "E.g. MIME Type, indicates what the content type of the binaryValue property is if it's populated."
              }
            }
          }
        ]
      },
      "ObjectReading": {
        "description": "An event reading for a object data type",
        "allOf": [
          {
            "$ref": "#/components/schemas/ObjectReading"
          },
          {
            "required": [
              "objectValue"
            ],
            "type": "object",
            "properties": {
              "objectValue": {
                "type": "string",
                "description": "If the value type of the reading is Object, it will be found in this property as a object value",
                "format": "byte"
              }
            }
          }
        ]
      },
      "CountResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        },
        "description": "Returns an aggregate count of specified objects, e.g. events or readings, in uint32 integer type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "Event": {
        "required": [
          "deviceName",
          "id",
          "origin",
          "profileName",
          "readings",
          "sourceName"
        ],
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "id": {
            "type": "string",
            "description": "The unique identifier for the event",
            "format": "uuid"
          },
          "deviceName": {
            "type": "string",
            "description": "The name of the device from which the event originated"
          },
          "profileName": {
            "type": "string",
            "description": "The name of the device profile from which the event originated"
          },
          "sourceName": {
            "type": "string",
            "description": "SourceName indicates the name of the resource or device command in the device profile which describes the event to generate"
          },
          "origin": {
            "type": "integer",
            "description": "A Unix timestamp (nanoseconds) indicating when the event was originated at the source device"
          },
          "readings": {
            "type": "array",
            "description": "One or more readings captured at the time of the event",
            "items": {
              "$ref": "#/components/schemas/BaseReading"
            }
          },
          "tags": {
            "title": "tags",
            "type": "object",
            "description": "List of zero or more Tags attached to the Event which give more context to the Event",
            "example": {
              "Gateway-id": "HoustonStore-000123",
              "latitude": {
                "degrees": 25,
                "minute": 1,
                "second": 26.6268000000062
              },
              "longitude": {
                "degree": 121,
                "minute": 31,
                "second": 19.600799999980154
              }
            }
          }
        },
        "description": "A discrete event containing one or more readings"
      },
      "ErrorResponse": {
        "type": "object",
        "description": "A response type for returning a generic error to the caller.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/Event"
          }
        },
        "description": "A response type for returning an Event to the caller.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "ConfigResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "config": {
            "type": "object",
            "description": "An object containing the service's configuration. Please refer the configuration documentation of each service for more details at [EdgeX Foundry Documentation](https://docs.edgexfoundry.org)."
          }
        },
        "description": "Provides a response containing the configuration for the targeted service."
      },
      "MetricsResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "metrics": {
            "$ref": "#/components/schemas/MetricsResponse_metrics"
          }
        },
        "description": "A response from the /metrics endpoint providing memory and cpu utilization stats."
      },
      "MultiEventsResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        },
        "description": "A response type for returning Events to the caller.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseWithTotalCountResponse"
          }
        ]
      },
      "MultiReadingsResponse": {
        "type": "object",
        "properties": {
          "readings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseReading"
            }
          }
        },
        "description": "A response type for returning Readings to the caller.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseWithTotalCountResponse"
          }
        ]
      },
      "PingResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "timestamp": {
            "type": "string",
            "description": "Outputs the current server timestamp in RFC1123 format",
            "example": "Mon, 02 Jan 2006 15:04:05 MST"
          }
        }
      },
      "ReadingResponse": {
        "type": "object",
        "properties": {
          "reading": {
            "$ref": "#/components/schemas/BaseReading"
          }
        },
        "description": "A response type for returning a Reading to the caller. The Reading may be of either type BinaryReading or type SimpleReading.",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResponse"
          }
        ]
      },
      "SimpleReading": {
        "required": [
          "value"
        ],
        "description": "An event reading for a simple data type",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseReading"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "A string representation of the reading's value"
              }
            }
          }
        ]
      },
      "VersionResponse": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "description": "A version number shows the API version in DTOs."
          },
          "version": {
            "type": "string",
            "description": "The latest version supported by the service."
          }
        },
        "description": "A response returned from the /version endpoint whose purpose is to report out the latest version supported by the service."
      },
      "MetricsResponse_metrics": {
        "type": "object",
        "properties": {
          "memAlloc": {
            "type": "integer",
            "description": "Alloc is bytes of allocated heap objects which is a uint64 type integer."
          },
          "memFrees": {
            "type": "integer",
            "description": "Frees is the cumulative count of heap objects freed which is a uint64 type integer."
          },
          "memLiveObjects": {
            "type": "integer",
            "description": "The uint64 type integer of live objects is Mallocs - Frees."
          },
          "memMallocs": {
            "type": "integer",
            "description": "The cumulative count of heap objects allocated which is a uint64 type integer."
          },
          "memSys": {
            "type": "integer",
            "description": "The total bytes of memory obtained from the OS which is a uint64 type integer."
          },
          "memTotalAlloc": {
            "type": "integer",
            "description": "Cumulative bytes allocated for heap objects which is a uint64 type integer."
          },
          "cpuBusyAvg": {
            "type": "number",
            "description": "A uint8 type integer indicates the average level of CPU utilization"
          }
        }
      }
    },
    "parameters": {
      "offsetParam": {
        "name": "offset",
        "in": "query",
        "description": "The number of items to skip before starting to collect the result set.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "minimum": 0,
          "type": "integer",
          "default": 0
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "The numbers of items to return.  Specify -1 will return all remaining items after offset.  The maximum will be the MaxResultCount as defined in the configuration of service.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "minimum": -1,
          "type": "integer",
          "default": 20
        }
      },
      "correlatedRequestHeader": {
        "name": "X-Correlation-ID",
        "in": "header",
        "description": "A unique identifier correlating a request to its associated response, facilitating tracing through being included on requests originating from the initiating request.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
      }
    },
    "examples": {
      "200Example": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 200
        }
      },
      "202Example": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 202
        }
      },
      "400Example": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 400,
          "message": "Bad Request"
        }
      },
      "404Example": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 404,
          "message": "Not Found"
        }
      },
      "409Example": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 409,
          "message": "Data Duplicate"
        }
      },
      "416Example": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 416,
          "message": "Range Not Satisfiable"
        }
      },
      "500Example": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 500,
          "message": "Interval Server Error"
        }
      },
      "EventExample": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 200,
          "event": {
            "apiVersion": "v2",
            "id": "040bd523-ec33-440d-9d72-e5813a465f37",
            "deviceName": "device-001",
            "profileName": "profile-001",
            "sourceName": "source-1",
            "origin": 1602168089665565200,
            "tags": {
              "Gateway": "HoustonStore-000123",
              "Latitude": {
                "degrees": 25,
                "minute": 1,
                "second": 26.6268000000062
              },
              "Longitude": {
                "degree": 121,
                "minute": 31,
                "second": 19.600799999980154
              }
            },
            "readings": [
              {
                "deviceName": "device-001",
                "resourceName": "resource-001",
                "profileName": "profile-001",
                "id": "31569347-9369-43ec-aa6a-59ea9c624a6f",
                "modified": 1594975851631,
                "origin": 1602168089665565200,
                "valueType": "Float32",
                "value": "39.5"
              },
              {
                "create": 1594876281221,
                "deviceName": "device-001",
                "resourceName": "resource-001",
                "profileName": "profile-001",
                "id": "2fd73a5b-969f-483c-9c52-6bb460a06eb1",
                "origin": 1602168089665565200,
                "valueType": "Int8",
                "value": "75"
              }
            ]
          }
        }
      },
      "AllEventsExample": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 200,
          "totalCount": 3,
          "events": [
            {
              "apiVersion": "v2",
              "id": "040bd523-ec33-440d-9d72-e5813a465f37",
              "deviceName": "device-001",
              "profileName": "profile-001",
              "sourceName": "source-1",
              "origin": 1602168089665565200,
              "tags": {
                "Gateway": "HoustonStore-000123",
                "Latitude": {
                  "degrees": 25,
                  "minute": 1,
                  "second": 26.6268000000062
                },
                "Longitude": {
                  "degree": 121,
                  "minute": 31,
                  "second": 19.600799999980154
                }
              },
              "readings": [
                {
                  "deviceName": "device-001",
                  "resourceName": "resource-001",
                  "profileName": "profile-001",
                  "id": "31569347-9369-43ec-aa6a-59ea9c624a6f",
                  "modified": 1594975851631,
                  "origin": 1602168089665565200,
                  "valueType": "Float32",
                  "value": "39.5"
                },
                {
                  "create": 1594876281221,
                  "deviceName": "device-001",
                  "resourceName": "resource-001",
                  "profileName": "profile-001",
                  "id": "2fd73a5b-969f-483c-9c52-6bb460a06eb1",
                  "origin": 1602168089665565200,
                  "valueType": "Int8",
                  "value": "75"
                }
              ]
            },
            {
              "apiVersion": "v2",
              "deviceName": "device-002",
              "profileName": "profile-002",
              "sourceName": "source-2",
              "id": "73fc4f9c-2d64-4920-addb-b1f33a8f8514",
              "origin": 1602168089665565200,
              "readings": [
                {
                  "deviceName": "device-002",
                  "resourceName": "resource-002",
                  "profileName": "profile-002",
                  "id": "71c601d9-cb56-453a-8c75-54461e444713",
                  "origin": 1602168089665565200,
                  "valueType": "Binary",
                  "binaryValue": [
                    12,
                    34
                  ],
                  "mediaType": "image"
                },
                {
                  "deviceName": "device-002",
                  "resourceName": "resource-003",
                  "profileName": "profile-002",
                  "id": "71c601d9-cb56-453a-8c75-54461e444715",
                  "origin": 1602168089665565200,
                  "valueType": "Object",
                  "objectValue": {
                    "Attr1": "yyz",
                    "Attr2": -45,
                    "Attr3": [
                      255,
                      1,
                      0
                    ]
                  }
                }
              ]
            },
            {
              "apiVersion": "v2",
              "deviceName": "device-002",
              "profileName": "profile-002",
              "sourceName": "source-3",
              "id": "d5471d59-2810-419a-8744-18eb8fa03465",
              "origin": 1602168089665565200,
              "readings": [
                {
                  "deviceName": "device-002",
                  "resourceName": "resource-002",
                  "profileName": "profile-002",
                  "id": "7003cacc-0e00-4676-977c-4e58b9612abd",
                  "origin": 1602168089665565200,
                  "valueType": "Float32",
                  "value": "12.2"
                }
              ]
            }
          ]
        }
      },
      "AllReadingsExample": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 200,
          "totalCount": 5,
          "readings": [
            {
              "deviceName": "device-001",
              "resourceName": "resource-001",
              "profileName": "profile-001",
              "id": "31569347-9369-43ec-aa6a-59ea9c624a6f",
              "origin": 1602168089665565200,
              "valueType": "Float32",
              "value": "39.5"
            },
            {
              "deviceName": "device-001",
              "resourceName": "resource-001",
              "profileName": "profile-001",
              "id": "2fd73a5b-969f-483c-9c52-6bb460a06eb1",
              "origin": 1602168089665565200,
              "valueType": "Int8",
              "value": "75"
            },
            {
              "deviceName": "device-002",
              "resourceName": "resource-002",
              "profileName": "profile-002",
              "id": "71c601d9-cb56-453a-8c75-54461e444713",
              "origin": 1602168089665565200,
              "valueType": "Binary",
              "binaryValue": [
                12,
                34
              ],
              "mediaType": "image"
            },
            {
              "deviceName": "device-002",
              "resourceName": "resource-002",
              "profileName": "profile-002",
              "id": "7003cacc-0e00-4676-977c-4e58b9612abd",
              "origin": 1602168089665565200,
              "valueType": "Float32",
              "value": "12.2"
            },
            {
              "deviceName": "device-002",
              "resourceName": "resource-003",
              "profileName": "profile-002",
              "id": "71c601d9-cb56-453a-8c75-54461e444715",
              "origin": 1602168089665565200,
              "valueType": "Object",
              "objectValue": {
                "Attr1": "yyz",
                "Attr2": -45,
                "Attr3": [
                  255,
                  1,
                  0
                ]
              }
            }
          ]
        }
      },
      "ReadingsByResourceNameAndTimeRangeExample": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 200,
          "totalCount": 6,
          "readings": [
            {
              "deviceName": "device-001",
              "resourceName": "resource-001",
              "profileName": "profile-001",
              "id": "31569347-9369-43ec-aa6a-59ea9c624a6f",
              "origin": 1602168089665565200,
              "valueType": "Float32",
              "value": "39.5"
            },
            {
              "deviceName": "device-001",
              "resourceName": "resource-001",
              "profileName": "profile-001",
              "id": "2fd73a5b-969f-483c-9c52-6bb460a06eb1",
              "origin": 1602168089665565200,
              "valueType": "Float32",
              "value": "38.6"
            }
          ]
        }
      },
      "CountExample": {
        "value": {
          "apiVersion": "v2",
          "statusCode": 200,
          "count": 3
        }
      }
    },
    "headers": {
      "correlatedResponseHeader": {
        "description": "A response header that returns the unique correlation ID used to initiate the request.",
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "example": "14a42ea6-c394-41c3-8bcd-a29b9f5e6835"
      }
    }
  }
}